,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
#,Укажи свои фамилию и имя,"Что такое java code conventions, назови основные рекомендации известные тебе?",Каким по величине (best practice) должен быть метод класса?,Каким по величине (best practice) должен быть класс?,Почему дублирование в коде - это плохо? Или не плохо? :),"Что такое magic numbers, что предлагаешь с ними делать?",Продемонстрируй на примере полиморфизм (напиши несколько строк кода),"У тебя есть (допустим) ресторан, как ты собираешься его декомпозировать в объектную модель, опиши шаги",Какая есть альтернатива наследованию? Когда выбираем тот или иной путь?,"Расскажи, почему плохо нарушать инкапсуляцию?","Почему важен SRP, что будет если его нарушить? В случае если SRP нарушен - как быть?","Почему существует Law of Demeter, что будет если его нарушить?",Зачем нужна система контроля версий?,Что обычно пишут в дескрипшене коммита?,С какой периодичностью стоит делать коммит в репозиторий?,Что такое revert? Зачем его придумали?,"Что такое ignore list, что и зачем туда попадает?","Что стоит коммитить в репозиторий, а что нет?",Что такое conflict и как он решается?,Что такое тест? С какой целью пишутся тесты?,Какие у теста основные артефакты? Чем тест отличается от production code?,Что такое code coverage и каким он должен быть в проекте?,"Что делать, если протекстировать класс не получается?",Какие виды тестовых двойников ты знаешь?,С какой целью делается рефакторинг?,Какие симптомы не качественного кода ты знаешь?,Сколько времени стоит проводить за рефакторингом?,Какие основные интерфейсы фреймворка? Для чего каждый из них используется?,Какие реализации каждого интерфейса ты знаешь?,Какие реализации Set ты используешь и почему?,Какие реализации Map ты используешь и почему?,Какая time complexity метода map.get() и почему?,Какие реализации List ты используешь и почему?,"Какая time complexity методов get(), add(), remove() в ArrayList и LinkedList?",Что такое очередь (Queue) и зачем она нужна?,Зачем существует Iterator?,Какова иерархия Exception в Java ?,Зачем вообще обрабатывать исключительные состояния?,"Какие исключения требуется перехватывать, а какие нет?",Как создавать собственные исключения и зачем?,Какого типа (чекед/анчекед) исключения надо создавать - в каких случаях и почему?,Что надо делать с пойманным исключением?,Для чего служат блоки finally и какой код там надо размещать?,"Расскажи про stack trace, зачем он, как организован?","Расскажи об иерархии (архитектуре) пакета java.io - какие там есть классы, на какие группы они разделены?",Что ты можешь рассказать про try-with-resources statement? Зачем закрывать открытые ранее ресурсы? Как правильно это делать?,Для чего придуман шаблон Decorator? Какие примеры декораторов в java io ты знаешь?,Какие есть типы join? Напиши пример SQL запроса использующего join.,Что такое группировка? Напиши пример запроса.,Чем having отличается от where?,Опиши суть первых трех нормальных форм,Как написать простейшее веб-приложение?,Чем отличается Servlet и JSP,Расскажи про жизненный цикл Servlet,"Что включает в себя war, для чего он создается?","Что такое сервлет контейнер, какие ты знаешь?",Опиши жизненный цикл maven приложения,Каковы особенности структуры maven приложения,"Какие вопросы решает maven, зачем переходить на него?","Что нужно сделать, чтобы подключить к maven проекту библиотеку?",Что такое maven плагин и зачем он?,Как просмотреть папку в которой ты находишься?,Как просмотреть список файлов в текущей папке?,"Как скопировать, переместить файл?",Как назначить права? Что такое право доступа 752,Как посмотреть права на файлы в папке?,Что такое sudo?,Как получить список процесов?,"Что такое пайп и грепы, как ими пользоваться?","Опиши ключевые этапы, как сконфигурировать простейшее (не web) Spring приложение с выводом информации в консоль",Где должен располагаться application-context.xml в web приложении и как этим управлять?,Что обычно указывается в application-context.xml?,"Что такое @Autowired, как она используется?","Что такое @Component, как она используется?","Что такое POJO, зачем его придумали?",Что такое транзакция?,Какие виды транзакций ты знаешь?,Что такое Entity?,Что такое DAO?,Что такое EntityManager и чем он отличается от Session?,Что такое JPA?,"В методе, сохраняющий состояние entity E в базу, после сохранения состояния возникло исключение, что произойдет и как на это можно повлиять?",Что такое MVC? Зачем его придумали?,Почему бы просто не писать все на Servlet - зачем придумали Web фреймворки?,Что такое WebServices зачем их придумали?,Что такое REST?,Что такое JSON?,Что такое WSDL?,Что такое XML?,"Что такое AJAX, зачем его придумали?",Что такое SPA и какую проблему он решает?,Зачем нужен JavaScript?,Какие Agile принципы ты знаешь?,Сколько человек по твоему мнению должно быть в команде? Почему?,Какие Agile фреймворки ты знаешь?,"Расскажи, какие самые главные по твоему мнению в Scrum практики, почему?",За неделю команда должна сделать 6 фичей. В команде трое человек. Один из вас на пол пути выбивается из графика. Что делать?,Start Date (UTC),Submit Date (UTC),Network ID
e1ad5ceb543b2c9c28859e3e980f9f3a,Наконечний Антон,"Документ рекомендацій: написання назв, структури документів, відступів для візуального сприйняття, написання коментарів та документації, доцільності лаконічності та простоти для сприймання виразів.",бажано вміщувати в простір сторінки.,Мінімально достатнім для реалізації згідно Single Responsibility Principe. Та бажано не перевищувати 2000 строчок.,Дублювання має тенденцію до важчої підтримки продукту.,Оголошувати їх статичними змінними зі зрозумілою назвою,"abstract class Animal { 
   abstract String voice()
}
class Parrot extends Animal {
    String voice() {
        return ""Hello!"";
    }
}

class Dog extends Animal {
    String voice() {
        return ""Woof"";
    }
}

void voice(Animal a) {
    println(a.voice());
}

public static void main(...) {
    voice(new Parrot());
    voice(new Dog());
}","Розділю на інтерфейси Кухню, Обслугу, Фінанси, Рекламу ... де будуть описані методи взаємодії. Далі можна зробити уточнюючі інтерфейси. Імплементуватимуть конкретні професії.","Асоціація: композиція, агрегація","Інші елементи програми опиняться пов’язаними на внутрішні об’єкти та реалізацію методів, в результаті чого неможливо буде їх змінити зберігши сумісність.","Класи стають важкими, їх важко тестувати, читати, підтримувати. Розділяти функціонал інтерфейсами, класами...","Для зменшення зв’язності модулів. Порушуючи його, модулі залежатимуть від віддалених даних, а особливо критичне порушення інкапсуляції.","Для паралельної розробки, можливості вертати версії, вирішувати конфлікти коду, переглядати історію...",Відмінність поточної версії коміту від попередньої,З періодичністю внесення змін.,Відміна коміту. Для виправлення помилкових комітів.,"Список ігнорованих файлів для VCS. Системні файли, бібліотеки, та інше не програмні елементи.","Коммітиться програмний код та супутні файли окрім системних файлів, бібліотек, та інші не програмні елементи, не працюючу версію",Суперечність накладання змін. Вирішується мерджем.,"Програма, що тестує основну програму. Для автоматизації контролю. ","Вхідні дані загальні, попередньої ініціалізації, поточного теста, реалізація теста, очікуваний результат, репорт . Тест не впливає на роботу програми і не є її частинами, відтак не входить у продакшн.",Відсоток покриття коду тестами. Як правило до 80 %. Достатнім для можливості безпечного рефакторигну і бажано не меншим від Вашого заходу в проект,Розділити його функціонал. Перевірити SRP.,"Fake, Mock, Stub, Spy.","З метою оптимізації програми, коду без зміни її функцій.","Порушення код конвенції, принципів SOLID.",До тих пір поки він оптимізує підтримку більше ніж займає часу.,"Collection (загальний), List(Списки), Set(набір унікальних ел), Map(набір ключ-значень), Queue(черга), Iterable(ітеровані дані), Iterator(формат колекції для обходу в ітерації), Comparable(порівнювальні дані), Comparator(порівнювач даних).","ArrayList, LinkedList, HashSet, LinkedHashSet, TreeSet, HashMap, LinkedHashMap, TreeMap, BlockingQueue...","HashSet швидший, LinkedHashSet шв. та впорядкований за додаванням, TreeSet сортований.","HashMap швидкий, LinkedHashMap шв. та впорядкований за додаванням, TreeMap сортований.","О(н) в гіршому випадку, з JDK 8 - O(log(n))","ArrayList швидкий доступ, LinkedList швидка вставка.","Арр: 1,н, н
Лінк: н,1,1",Для застосування даних що використовуються за принципом черги ,Для використання колекцій в ітераціях поелементно,"Throwable: Error, Exception(RuntimeException, )","Для їх вирішення, доповнення, подачі.",Cheked треба. Не вирішуються виключення що пов’язані з системними проблемами,успадкувати клас від існуючого чекед виключення,Створюються для розрізнення виключень при роботі логіки. ,"Обробляти, вирішувати, доповнювати",для закриття задіяних ресурсів,"Шматок пам’які, що реєструє шлях виконання програми. Для контролю ","Buffered- File-  CharArray- BityArray-, Data- 
+
-InputStream, -OutputStream, -Reader, -Writer",трай з рес. - синтаксичний цукор для автоматизації закриття ресурсів. Для вивільнення ресурсів,Для розширення функціоналу для ширшого використання,"INNER-, LEFT-, RIGHT-, OUTER- CROSS-. SELECT *FROM Person INNER JOIN City ON Person.CityId = City.Id","Вибірка стисканням групами. SELECT name, surname FROM Person WHERE name = 'Anton' GROUPED BY surname",Хевінг використовується після групування. Без групування не відрізняється,"Таблиця повинна мати основний ключ, Уникнення повторень, Атомарність, Повторювані дані виносяться окремо, Дані залежні від основних ключів виносятсья окремо","Покласти в контейнер сервлет клас. Трохи ""складніше"": разом з веб.хмл та збілкити вар.","Сервлет працює в якості контроллера, ДжСП в якості в’ю , але обидва компілюються  в сервлет","Запуск контейнера , загрузка, інстанціація, ініціалізація, обробка реквестів, дестрой","скомпільований програмні файли, бібліотеки і супутні файли. для подальшої передачі повної програми","Реалізація сервлет інтерфейсів, реалізуючий життєвий цикл та структуру. Томкет, Джеті, Жбосс ","Завантаження залежностей, компіляція, тестування, білд, розгортання....",хмл конфігурація,"Автоматизує білд проекту, завантажую бібліотеки, артифакти",прописати депенденсі в пом.хмл,плагін для ІДЕ,pwd,ls,cp file1 file2,"chmod ugo+rwx directory1. Повні права власника, читання запуск групи, правка сторонніми",ls -lh,інструмент роботи в якості іншого користувача,ps -eafw,,"Підключити Спрінг бібліотеки, Створити Конфігурацію бінів, Підключити конфігурацію ","В корні. Можно і інакше, прописуючи КлассПас...",Біни,Анотація підвантаження компонентів,Анотація що маякує Бін компонент,"Плейн Олд Джава Обдж, з приватними полями, дефолттним конструктором та публічними гетерами сетерами",Одиниця внесення змін в БД,Автоматичні та Явні,Сутність в ООП,Об’єкт доступа до даних,Менеджер - сесія з боку ОРМ (в сторону ООП). ,Інтерфейс ОРМ,"Перехопити , вирішити, спробувати повторно при необх. інакще відміниться ","Патерн проектування . Розділення функціоналу на модулі Модель, в’ю, контроллер",для прискорення роботи та роботи на вищіх рівнях,Підхід до реалізації веб транзакцій. Для розвантаження мережі.,Репресентейшн Стейт Трансфер . Підхід до реалізації архітектури веб програм,ДжаваСкріпт Обджект Нотейшн. Спрощена форма передачі даних об’єктів,ВебСервіс ДескріпшнЛенгв,Розширювано маркуюча мова,Набір технологій для реалізації СПА,Сайт Однієї сторінки. Виносить логіку на клієнта . Розвантажує мережу.,Для реалізації динаміки на фронтенді,"Відносини з клієнтом важливіші за підписаний з ним контракт. Програмне забезпечення важливіше, ніж повна документація. Особистості та їхні взаємодії важливіші, ніж процеси та інструменти. Реакція на зміни важливіша, ніж дотримання плану.",5+-2. Бест практіс,Скрам,Список вимог функціональності. Зустрічі,Провести нараду з вирішення конктретної проблеми. Можливо хтось встигне швидше,2016-02-17 17:24:49,2016-02-17 19:48:18,580379f827
b1cfe72deb4c769e3a19be80471c863a,Юрчук Ольга,"Это общепринятое соглашение, которое говорит о том как оформлять код. Это позволяет улучшить читабельность кода.Основные рекомендации: 
-        названия классов пишут с большой буквы, и сущ.
-        методы и переменые пишут с маленькой буквы, а если  метод нужно состоит из несколько слов, то каждое следующие слово пишут с большой буквы
-        методы должны быть глаголами
-        константы – все буквы с названии большие 
-        Между именем метода и скобками нет пробела.
-        Имена методов  должны говорить само за себя
-        ",чем меньше тем лучше,"Минимально возможным, но при этом нужно следить за тем, чтобы не терялась функциональность","Плохо, во первых это увеличивает его длину
Еще сложно читать и понимать код если он дублируется. ","Это число в коде, которое не понятно, что значит, просто стоит магическое число. Что делать – заменять объявленными константами.","class Animal {
@override    
public String toString() { return ""Animal""; }
}

class Cat extends Animal {
@override    
public String toString() {return ""Cat""; }
}
    
class Dog extends Animal {
@override    
public String toString() { return ""Dog""; }
}

Animal animal = new Animal();
Animal cat= new Cat();
Animal dog= new Dog();
System.out.println(animal);
System.out.println(cat);
System.out.println(dog);"," Выделить глобальне объекты – кухня, зал.
Выделить их различия (кухня производит блюда, в зале их заказывают и потребляют)
Выделить их связи (Блюдо является общим звеном для кухни и зала)
Определить иерархию (кухня сначала формирует меню, в зале из меню формируют заказ)
Разработать пулл классов и их взаимосвязи, жизенный цикл, использование.
","использование интерфейсов. И-фейс используем, когда нужно множественное наследование. Наследование - когда нужно расширить класс.","потому, что мы оставляет открытый доступ там, где этого не надо. (зачем консьерже ключи от твоей квартиры? :))","Single responsibility principle. Можно нарушить двумя способами:
1) Один класс выполняет несколько обязанностей
2) Несколько классов выполняют одну обязанность
В первом случае у нас могут появляться большие классы. Во втором у нас появляются лишние связи. Оба этих случая усложняют понимание программы.
В общем случае необходимо отрефакторить код так, чтобы SRP соблюдался.","потому, что множество связей-доступов многих  объектов ко многим делает код громоздким, тяжелым в обслуживании и отказонеустойчивым.","СКВ позволяет работать в команде.даёт возможность возвращать отдельные файлики к прежнему виду, возвращать к прежнему состоянию весь проект, просматривать происходящие со временем изменения, определять, кто последним вносил изменения и кого нужно наказывать :) ",короткое описание куска кода которое закомитили. ,"чем чаще, тем лучше",rever - откат последнего изменения,"Лист файлов, которые должны быть неизменны. Нельзя их менять. ","Комитить нужно отдельные классы, не нужно комитить весь проект целиком и полностью.","конфликт - это конфликт :), если одновременно вносят изменения в один файл. ","Тест - это код, который проверяет исходный код. Пишут для того, чтобы проверить отдельные методы или функции кода.","Артефакты

- План тестирования (Test Plan) - это документ описывающий весь объем работ по тестированию,

- Набор тест кейсов и тестов (Test Case & Test suite) - это  некие действия, которой можно проверить соответствует ли тестируемая функция установленным требованиям. 

- Дефекты/ Баг Репорты (Bug Reports/ Defects) - это документы,описывает ситуацию, когда некорректно работает тест, с указанием причин и ожидаемого результата.
Тесты не включаются в production code.","это покрытие тестами. Он должен быть достаточным, для того, чтобы мы были уверенны в устойчивости программы (не боялись рефакторить....)",Тогда проводить интеграционное тестирование,"Мок,  заглушка, фейк.",Для оптимизации кода (например: улучшение читабельности) ,Слишком большой класс и/или методы. Дублирование кода. Длинный список параметров. ,Примерно 20%,"List, Set, Map,  Collection, Iterable, Iterator, 
Collection -  набор элементов. Map - ключ — значение. List - неупорядоченная коллекция, в которой могут быть  дублирующие значения. Элементы пронумерованы, начиная от нуля, к ним можно обратиться по индексу. Set -  неупорядоченная коллекцию, в которой есть повторяющиеся  элементы. Queue - очередь. храним объекты элементов в порядке, нужном для их обработки. Collection, очередь предоставляет дополнительные операции вставки, получения и контроля.","List – ArrayList, LinkedList
Set – HashSet, LinkedHashSet, TreeSet
Queue - PriorityQueue
Map – HashMap, TreeMap, LinkedHashMap","Если мне необходим Set, то я использую HashSet. Если необходим сортированный Set - то TreeSet. Отличие LinkedHashSet от HashSet -  поддерживает связный список элементов, в том порядке в котором они добавлялись.","HashMap, TreeMap, LinkedMap. Аналогично set",TreeMap - O(Lg(n)). Так как в основе лежит красно черное дерево. С HashMap посложнее сложность колеблеться от O(1) до O(n). Полностью зависит от hash функции. В общем случае get для HashMap работает быстрее чем для TreeMap.,ArrayList и LinkedList. Использую ArrayList.,"ArrayList - о (1), о( n), о(n), в lLinkedList наоборот","коллекция, которая нужна для хранения элементов в порядке, нужном для их обработки. очередь предоставляет дополнительные операции вставки, получения и контроля","Главное предназначение литераторов в том, что пользователь может обратиться к любому элементу, при том, что внутренности скрыть от пользователя.","обжект - трабл. Трабл делится на ексепшт и на еррор. Еррор мы не трогаем - это как правило глобальная проблема, а с Ексепшинами работаем. ","Чтобы в случае ошибки программа могла не завалится и продолжать работать. Это примерно, как я предупредила маму, что буду поздно и она знает это. Так и мы прописывает, что могут возникать ошибки в той или иной ситуации и что с ним делать.","Контролируемые исключения перехватываем, а анчекет не трогаем. ","наследовать от Ексепшн. Для особых случаев, которые не предвидены раньше ","Чекед - нужно создавать, анкете можно проигнорировать.","Cheked исключения можно либо обработать, либо пробросить дальше по стеку вызовов. Unchecked исключения также можно обработать, можно бросить дальше, а можно проигнорировать.","это блок, который всегда выполняется, и для него не важно произошла ошибка или нет. например пишем закрытие подключения к базе. ",содержит информацияю о стеке вызовов от мейн и до текущего метода. Организован по принципу LIFO. Там хранится информация о классе и методе откуда осуществлялся вызов,Он поддерживает систему ввода/вывода в Джава. ,"конструкция, которая заменит блок finally, в конструкции try-catch-finally. для автоматического закрытия ресурсов (ресурсы должны быть автозакрываемые)","Декоратор - расширение функционал, без наследования. Пример -Buffered","Простой JOIN -  INNER JOIN ,    Простой FROM t1 JOIN t2 on t1.id = t2.id LEFT JOIN означает показывать все записи из левой таблицы (той, которая идет первой в join-выражении) независимо от наличия соответствующих записей в правой таблице. RIGHT JOIN противоположность LEFT JOIN",select count (name) from fruits group by color ,"WHERE - ограничивающие значение, до того как получим результат.   HAVING - операция над результатом.","Нормальная форма — требование,  к структуре таблиц. 1 Все строки должны быть различными. Все элементы внутри ячеек -  не списки. 2 -Таблица должна находиться в первой нормальной форме. Любое её поле, не входящее в состав первичного ключа, функционально полно зависит от первичного ключа. 3 - Таблица находится во второй нормальной форме. Любой её не ключевой атрибут функционально зависит только от первичного ключа.","создаем приложение с помощью maven, подключаем необходимые библиотеки и создаем сервлет ",SP страница преобразуется в сервлет на стороне сервера при первом запросе (или во время старта веб приложения) и компилирутеся в class файл. JSP это более удобное представление сервлета,1.init() 2.service() 3.destroy()   ,включает файлы в формате JAR или ZIP.версию развёрнутого приложения легко идентифицировать. Все J2EE-контейнеры поддерживают WAR-файлы.,"Jetty, TomCat, JBoss, GlassFish. Позволяет запускать сервлеты.","compile ,test, packagе,integration-test, install, deploy","для однотипных приложений, равен создаст одинаковую структуру","Помимо компилирования, тестирования и пакетирования, мавен позволяет делать деплой проекта в tomcat посредством плагина tomcat-maven-plugin. Конфигурируется он в pom.xml",прописать зависимость (депенденси),"Плагины используются самим мавеном при сборке проекта или для каких-то других целей (деплоймент, создание файлов проекта для Eclipse и др.)",pwd,ls,"cp, mv","chmod, ...?","ls, -la","программа для системного администрирования юникс-систем, позволяющая делегировать те или иные привилегированные ресурсы пользователям с ведением протокола работы. Основная идея — дать пользователям как можно меньше прав, при этом достаточных для решения поставленных задач. ",ps -ax ,"пайп, он же конвеер. Обозначается вертикальной чертой (символ ""|""). Используется в комбинациях команд. греп - утилита командной строки, которая находит на вводе строки, отвечающие заданному регулярному выражению, и выводит их, если вывод не отменён специальным ключом. ",,Прописывается в web.xml,"application-context.xml Определяет бины для корневого контекста приложения, то есть для контекста всего приложения. ","Используя эту аннотацию, не нужно заботиться о том, как лучше всего передать классу или bean'у экземпляр другого bean'a. ",аннотация для любого кмпанента фреймворка,"простой Java-объект,  не унаследованный от какого-то специфического объекта и не реализующий никаких служебных интерфейсов сверх тех, которые нужны для бизнес-модели.","Это такая штука, которую нельзя закончить на пол пути. Есть только 2 варианта:
выполнения всех запросов, входящих в транзакцию, или откатить все к началу.","SERIALIZABLE - полностью изолированные, REPEATABLE READ - читающая транзакция не видит изменения данных, которые были ею ранее прочитаны.",Entity это легковесный хранимый объект бизнес логики. ,интерфейс общения с бозой.,"Основная разница в том что EntityManager создается через EntityManagerFactory (это JPA), a Session создается через SessionFactory (это Hibernate).",стандартизированный интерфейс для java ORM фреймворка (сохранение джава объектов в таблице),"код не выполнится, выполнение кода продолжится в том месте, где будет поймано это исключение","Это патерн, который разделяет модель- морду лица (вью) - контролер. Основная цель  отделении бизнес-логики (модели) от её визуализации (представления, вида). За счет чего повышается возможность повторного использования. Наиболее полезно применение данной концепции в тех случаях, когда пользователь должен видеть те же самые данные одновременно в различных контекстах и/или с различных точек зрения. ",На сервелате писать очень сложно. ,"сетевая технология, которая обеспечивает взаимодействия на основе веб-стандарта.",rest - это архитектурный стиль.  Набор рекомендаций о том как удобно построить распределеную систему,"текстовый формат обмена данными, основанный на JavaScript и обычно используемый именно с этим языком. JSON легко читается людьми","язык описания веб-сервисов и доступа к ним, основанный на языке XML.","язык разметки документов, позволяющий структурировать информацию разного типа, Удобен для чтения и создания документов.","если мы не изменяем url, меняем только параметры, то перезагружается не все страница, а только часть.","это фрейворк, который позволяет реализовать Ajax",язык для создания динамики,"Люди и взаимодействие важнее процессов и инструментов
Работающий продукт важнее исчерпывающей документации
Сотрудничество с заказчиком важнее согласования условий контракта
Готовность к изменениям важнее следования первоначальному плану",Как пишет Википедия размер команды в идеале составляет от 3 до 9 человек. ,Скрам,"Спринты - жёстко фиксированные и небольшие по времени итерации, Беклог проекта - список требований к функциональности, упорядоченный по их степени важности, подлежащих реализации. Беклог спринта аналогичен беклогу проекта. Диаграмма сгорания задач -, показывает количество сделанной и оставшейся работы. Обновляется ежедневно с тем, чтобы в простой форме показать подвижки в работе над спринтом. ","Учитывая, что каждый день мы пррводим стенд-ап, то в курсе того, что делает человек и можем его подстраховать, тоесть помогать.",2016-02-17 17:25:18,2016-02-17 19:58:14,580379f827
57d3e1b89af311f0c645f6151cc07b74,Щербак Вячеслав,"Требования к написанию кода для его читабельности и удобства сопровождения. Формат текста, отступы, названия классов, переменных...","около 15 строк, максимум не больше чем на одну страницу экрана для охвата взором целиком.","желательно до 300 строк, 500 строк еще можно, 1000 если уж совсем необходимо",Плохо! Загромождает код. Если не вынести в отдельный метод то при рефакторинге очень много однотипных исправлений и большая вероятность где то забыть исправить,"Число, которое встречается много раз в коде и по смыслу очень трудно понимаемое и трудно поддерживаемое (см. предыдущий вопрос). Вынести в именованную константу в начало класса.","public interface Example { public void Foo(); }
 public class A implements Example { public void Foo(){sout ""I am A""}}
 class B implements Example {public void Foo(){ sout ""I am B""}}
 psv main(String[] args) { Example ex = new A(); ex.Foo(); ex = new B(); ex.Foo();}
 Определение поведения объекта во время выполнения. Позднее связывание.  ","Опишу требования к зданию, оборудованию. Опишу типы нанимаемого персонала и его требуемое поведение. Определю UI, какие функции будет выполнять (публичные методы).",Агрегация (или композиция). Если нужно связать два объекта (один дать в пользование другому) - выбираем агрегацию. Если нужно расширить функциональность существующего класса - наследование.,"Если поленился доработать код и открыл метод, который должен быть приватным, - кто нибудь его заюзает и ты уже не сможешь его закрыть.","Будет трудно поддерживать, рефакторить. Разделить класс на более мелкие, отвечающие за одну задачу.","Чтобы не нарушить принцип инкапсуляции. Если объекты знают слишком много друг о друге, увеличивается вероятность багов.",Прежде всего для отката к работающему коду в случае провала тестов после очередной фичи. Так же для удобства коллективной работы над проектом.,Коротко (но не слишком )и лаконично описание внесенных изменений. ,После каждого внесенного изменения. Несколько раз в день.,чтобы отменить коммит если мы решили что он не правильный.,"чтобы в коммит не попали файлы, которые там не нужны (логи, откомпилированные...).",Файлы кода и файлы настроек ИДЕ и проекта если требуется. Не коммитятся логи и откомпилированные исполняемые файлы.,"Если два разработчика работают над одним классом и делают мердж одного фрагмента кода, придется выбирать кто из них прав и коммитить его код.","Код, предназначенный для проверки другого (рабочего) кода. Пишутся для выявления багов в автоматическом режиме чтобы не проверять каждый раз вручную.","Тестовые методы помечаются соответствующими аннотациями, определяющими что будет происходить до теста, во время его выполнения и после него. Код теста заточен на проверку production code, для его запуска не нужен мейн или сборка проекта в целом. ",Покрытие тестами кода. В идеале каждый предполагаемый вариант развития событий при выполнении программы должен быть проверен тестами при всех возможных (и не возможных если нужно) данных. В идеале покрытие 100%.,Протестировать взаимодействие с другими классами.,"мок, спай, фейк",Для упрощения дальнейшего сопровождения либо добавления новых фич.,"Повторяемый код, нарушение сингл респонсибилити.",до 80%,"коллекшн, лист для набора однотипных объектов, сет для исключения повторения объектов, дека для FIFO (или двусторонняя), мап для пар ключ-значение, итерейбл для перебора объектов,  компарайбл для сравнения при упорядочивании","аррайлист, линкедлист, хешмап, хештейбл",хешсет,"хешмап и хештейбл, одна из них синхронизирована и другая нет и более быстрая, одна позволяет нулл в ключах и значениях, другая нет, treemap",если хеш мап то Q(n) если чримап logn,"аррай лист в большинстве случаев если не нужно частых вставок удалений в середину, также он быстрее в доступе. Линкед лист если нужно часто писать в середину.","аррай get -Q(1) add  - Q(n) remove() -Q(n) , linked -  Q(n) Q(1) Q(1)","первый вошел первый вышел, для последовательной обработки объектов",для прохода по коллекции,"сровейбл, от нее ексепшн и еррор, он ексепшина рантайм и чекаемые ексепшены :)",чтобы пользователь не был разочарован вылетанием программы,"обрабатываемые требуется, рантаймы нет",наследуемся от эксепшина и используем для обработки не стандартных ситуаций,"чекед если мы предполагаем их обрабатывать, анчекед если обработка не имеет смысла (не возможна)",обрабатывать или бросать дальше если нужно,"код в них выполнится в любом случае, в них закрывают открытые ресурсы для исключения утечек памяти","исключение летит через весь стек пока его не поймают, стек трейс это список всех методов которые были вызваны (по порядку)","байтовые и чаровые, от них наследуются ""подробности"" (частности)","новый вид трая, в скобках указываются открываемые ресурсы, закрываются автоматически без нашего участия для исключения утечек памяти","для добавления функционала к существующему, буфферед ридер","для объединения таблиц в запросе select employee.name from employee left join assignment on employee.employeeID = assignment.employeeID
where clientID is null.....",select * from table group by fieldname для сортировки по нужному сторбцу,"вере идет первым, хевинг завершает выборку из ""выбранного""",1.не должны повторятся значения в строках ,"написать сервлет, JSP страницу, запаковать в варник, положить в ТомКет,","Сервлет содержит логику, взаимодействие с ДАО, JSP делает вьюху","Загружаем в сервлет контейнер, инициируемая при загрузке или при первом вызове (метод инит), отвечаем на запросы (метод сервис), умираем(дестрой).",код плюс веб иксэмэл с настройками для загрузки и разворачивания в сервлетконтейнер,обертка для мапинга урлов на сервлеты. Том кет,"пишем код, клин(если нужно).компайл (с подтянутыми библиотеками), тестим, деплоим","все лежит по строго определенным папкам, код в своих, тесты в своих с одинаковыми названиями настройки в пом.хмл","автоматическая сборка проекта с тестированием, ускоряет разработку",прописать депенденси в поме,"дополнительная фича для разных задач, например джетти",pwd,ls,cp filename filename,"чтение запись выполнение для пользовителя, группы, гостя",chmod, безопасный root,,для перенаправления потока,"Написать код, описать бины и зависимости хмл",папка ресоурсе,"бины, зависимости(ref)",для автосвязывания переменной с созданным бином,автоматическое создание бина,плейн олд джава обджект  для создания бинов,"атомарный набор операций в базе данных, если не пройдет, то все вернется в исходное состояние","защищенные, не защищенные",сущность (класс описывающий что то),класс с методами доступа к данным,"менеджер это надстройка над сешшн, менеджер открывает сешшн","""интерфейс"" описывающий правила таботы с базой",сделать роллбек,модел вью контроллер для упрощения написания серверных приложений,для сокращения шаблонного кода и ускорения написания,архитектура веб приложений для стандартизации,архитектура в которой вьюха напоминает маппинг на ресурсы,стандарт описания объекта в джаваскрипт,,язык разметки,асинхронный джаваскрипт для того чтобы не перегружать страницу каждый раз,все приложение в одной странице для динамической подгрузки,язык программирования на стороне клиента,методология гибкой разработки,"7 +- 2, больше не воспринимается","скрам, экспи, лин",разбиение проекта на спринты,помочь товарищу и выровнять спринты,2016-02-17 17:23:37,2016-02-17 19:59:21,580379f827
fc26677ba80c4d8a457cd45530abf8ef,Гальченко Ярослав,,,,"Плохо, это затратно и непродуктивно вплане использования времени разработчика и системы.
Дублирование java обходит такими технологиями:
- полиморфизм;
-абстрактные классы и интерфейсы;
-наследование;
-шаблоны проектирования (декоратор)","magic numbers- целочисленные константы, предназначенные для однозначной идентификации данных. 
Пример:
final int  BLOCK_LENGTH = 640;
Предлагаю максимально уходить от использования magic numbers - поскольку такой код сложно тестировать, он не гибкий в использовании и он нарушает SOLID принципы разроботки","Class A{
void drive(){
System.out.print(""Car A..."")
}

Class B extends A{
void drive(){
System.out.print(""Car B..."")
}

Class C{
main(){
A a = new B();
a.drive();
}
}
}","Декомпозиция — разделение целого на части.
1. Низкий уровень -  классы утилитного, системного назначения, которые являются надстройкой над стандартным API - например для ресторана это кастомный класс StatusComparator - сравнивает клиентов по суме заказа для большей или меньшей скидки - переопределяем стандартній компаратор, класс ClientIterator - переопределяем стандартный Iterator, классы для создания подключения с БД.  
2. Модули среднего уровня содержат компоненты, имеющие привязку к какой-то предметной области- классы-сервисы Registration, Account
3. Модули высокого уровня всегда привязаны к предметной области приложения. Это может быть модуль модели предметной области - по сути это нашие Entities",Имплементация интерфейсов. Имплементацию выбираем в большинстве случаев - когда необходима максимальная гибкость и абстрактность,"При нарушении инкапсуляции данные подвергаются риску использования внешними ресурсами, то есть они могут быть использование не по назначению ","В объектно-ориентированном программировании принцип единственной обязанности ( Single responsibility principle) обозначает, что каждый объект должен иметь одну обязанность и эта обязанность должна быть полностью инкапсулирована в класс. Все его сервисы должны быть направлены исключительно на обеспечение этой обязанности.","Закон Деметры (англ. Law of Demeter, LoD) — набор правил проектирования при разработке программного обеспечения, в частности объектно-ориентированных программ, накладывающий ограничения на взаимодействия объектов (модулей). 
Существует для поддержки ""многоярусной архитектуры"" разработки. Таким образом, код a.b.Method() нарушает Закон Деметры, а код a.Method() является корректным.","VCS даёт возможность возвращать отдельные файлы к прежнему виду, возвращать к прежнему состоянию весь проект, просматривать происходящие со временем изменения, определять, кто последним вносил изменения во внезапно переставший работать модуль, кто и когда внёс в код какую-то ошибку, и многое другое.",Кратко описывают событие которое привело к коммиту ,По мере логических шаговых изменений в ресурсе что коммитится,"Он отменяет последний коммит , и заменяет его на новый  созданный",Ignore list - файл GIT что сохраняет файлы которые не должны попасть в репозиторий (настройки IDE например),"Исходный код первое что нужно комитить, а файлы настроек системы, среды часто бывает ненужным для коммита. Но все же это зависит от задач разработчик",Сonflict возникает когда мы делаем merge веток в git. Решается выбором одного варианта файла с нескольких одинаковый при коммите  ,Java код - что тестирует другой java код.  Для проверки функционала модулей. ,Тест  это вспомогательный класс который не несет в себе никакой бизнес логики этим он и отличается. Методы тестового класса имеют аннотацию @Test,code coverage- покрытие тестами кода. Должно быть 100% ,изменить стуктутуру классов - нетестируемые классы свидетельствуют о неправильно построенной доменной модели,Пустые обекты заглушки,Оптимизация кода,"много статики, не поддаются тестам, много шаблонного кода",Как можно больше,"List, Set, Comporble, Iterable, Quee, Collection, Queue ","List - LinkedList, ArrayList; Set- HashSet, TreeSet.
Map - HashMap и так далее",HashSet - использую для хранения разных обьектов. TreeSet- для хранения обектов в сортированом виде  ,"HashMap - когда нужна уникальность обьектов, HashMap - когда нужна сортировка ","map.get() time complexity hash-map O(1), tree map -  O(log(n)) HashMap - ищет быстро через hash таблицю ","ArrayList - поиск, сортировка. LinkedList - добавление, удаление","For LinkedList
    * get is O(n)
    * add is O(1)
    * remove is O(n)

For ArrayList
    * get is O(1)
    * add is O(1) amortized, but O(n) worst-case since the array must be resized and copied
    * remove is O(n)","Queue - коллекция, предназначенная для хранения элементов в порядке, нужном для их обработки. В дополнение к базовым операциям интерфейса Collection, очередь предоставляет дополнительные операции вставки, получения и контроля.
Очереди обычно, но не обязательно, упорядочивают элементы в FIFO (first-in-first-out, ""первым вошел - первым вышел"") порядке."," Интерфейс, предоставляющий доступ к элементам коллекции (массива или контейнера) и навигацию по ним. ","Интерфейс Throwable:
-Error
-Exceptions(RuntimeExceptions)","1 - через Try - Catch
2 - throws Exceptions",Не Перехватываемые - которые наследуются от RuntimeExceptions ,exrends Exceptions,,обрабатывать,блок выполнится в любом случае,Последовательность выполнения методов в java по принципу стека,"Java IO architecture seems to be large and complex, there are rules to follow, to understand its structure, need to understand two points:
1 the symmetry properties: InputStream and OutputStream, Reader and Writer, they are a set of byte input - output, character input - output system
2 original processor (adapter) processor and link flow (ornaments)
 
Its structure is as follows:
InputStream-OutputStream system","This is a try statement that declares one or more resources. A resource is as an object that must be closed after the program is finished with it.
The try-with-resources statement ensures that each resource is closed at the end of the statement. Any object that implements the java.lang.AutoCloseable or java.io.Closeable interface can be used as a resource.","Декоратор для динамического добавления нового фунционала обьектам, не затрагивая старого. Пример BufferedReader ","Left,Right, Full, Cross, Inner. Пример select * from Student Join Group on Student.GroupId = Group.Id  ","Групировка для соедениния групы и елементов которые в ней находятся SELECT Customer,SUM(OrderPrice) FROM Orders
GROUP BY Customer ",havaing для агрегатных функций,,Унаследоватся от HttpServlet,JSP - это сервлет с упрощенным функционалом обработки HTML,Init - Service - Destroy,,Это контейнер в котором происходит жизненый цикл сервлета. Пи запросе контейнер инициализирует сервлеты,Compile- Test - Package - Integration Testes- Install - Deploy,"src(main(java, resoures), target)-  ","Автозборка, подгружает библиотеки",прописать dependency в pom.xml,,pwd,ls,"cp,  mv",,chmode,команда дает права супепользователя,ps-ax,,,в web-inf,бины и component-scan,Инициализирует переменную класа с бином динамически,Создает бин,простой класс с полями геттерамы и сеттерамы,процесс который либо выполнится полностью либо не выполнится вообще,"Изолированые, не изолированые",Класс -сущность ,Обьект доступа к базе данных также паттерн,Провайдер транзакций в JPA,"Фреймворк, для работы с БД",,Для разделения представленя от бизнесс логики - это паттерн построения приложения,,"По сути, веб-сервисы — это реализация абсолютно четких интерфейсов обмена данными между различными приложениями, которые написаны не только на разных языках, но и распределены на разных узлах сети.","это стиль архитектуры программного обеспечения для распределенных систем, таких как World Wide Web, который, как правило, используется для построения веб-служб.",формат хранения данных,"зык описания веб-сервисов и доступа к ним, основанный на языке XML",Формат описания данных,"асинхронный java script, что бы выполнять функции паралельно",Сайт с одной web станицей,Для интерактивности на стороне клиента,,5 - 6 ,"Scrum, XP",,Распределить его задачи,2016-02-17 17:59:50,2016-02-17 20:03:56,580379f827
497936895b07c9ff7a9f5cbd14ef93b2,Подолянець Павло,"Це рекомендації до написання коду. Створений для зручності підтримки та систематизації правил роботи з кодом. Основні: клас повинен мати Single Responsibility, бути написаним в певним розмірниз межах, класи, методи, пакети повинні бути названі відповідно до вимок СС.","Не великим, щоб вміщався на одну екран компютера, а точніше чим меншим. Метод повинен виконувати щось одне конкретне, якщо метод виконує два завдання чи дії його краще декомпозувати.","Також не великим, повинен зберігати Single Responsibility Prinsiple. ","Погано, бо це загромоджує код, чи програму, зміна в одній частині коду не виконує зміни в іншому. Такий код важко підтримувати.","Це не зрозумілі цифри в коді, які треба переносити в константи. Так зрозуміло що це число, і його можна використовувати де завгодно, при зміні константи, змінюється її величина в усіх місцях використання.","Код не писатиму, сорі. Поліморфізм це здатність працювати з різноманітними обєктами, які мають єдиний типічний доступ до них, без уточнення деталей внутрішньої їх реалізації. На приклад здатність різного роду ламп світити, не залижно від технології їх виготовлення.","Від найбільшого до найменшого. Скажімо, спочатку на фізичні і абстрактні обєкти. Фізичні обєкти на персонал, приміщення, устаткування, допоміжні реці (транспорт тощо). Абстрактні на документи, дозволи, договори, угоди, домовленості, ауру, та карму ітд.","Композиція та агрегація. Аргрегація коли можливе декомпозування, композиція коли ні.","Втрачається її суть, зявляєтья безпосередній доступ до речей що не повинні його мати, втрачається безпечність (захист даних) таких програм.","Він важливий бо так зручно працювати з класама, якщо його порушити то це може призвести то загромадження і перенавантаження класа. Якщо він порушений клас треба декомпозувати.",Він існує для запобігання звернення до метода через клас що вище ніж на один рівень. ,"Для колективної роботи над проектом, для можливості зберігати всі версії проекту в хмарі і відкотитися на будь якиї з них в разі чого. Для відображення історії вкладу в проект конкретного дева.","Що було зроблено, повно, логічно і стисло. Щоб люди на проекті могли зрозуміти що було зроблене.","Після виконання чогось на проекті, чи частіше тим краще, Best Practice - кожні 10 - 15 хвилин роботи з кодом. Якщо на проекті багато людей то можна й частіше;)",Підозрюю що це для повернення проектру до певної версії. Придумано для відмінення помилкових чи провальних дій на проекті.,Туди попадає те що ігнорується. Що точно не знаю.,"Все що стосується змін на проекті що важливі для іних працівників проекту- вартує, власні напрацюваття що не відносяться до проекту безпосередньо (тестові класи/медоди тощо) - не вартує","Це коли двома юзерами відкрито один і той же проект, один із  при цьому зробив певні зміни і закомітився, а інший не може вже того зробити бо перший вніс змінни в ту саму логічно частину коду. Вирішується мердженням вручну. З вирішення фінальної версії змін.","Тест ще метод для перевірки роботи іншого  методу. Пишуться з тією ж ціллю, для зручності швидкості, правельності, та різноманіття перевірок коректності роботи самого метода.","В ньога є ассерти, що порівнюють отримані дані з очікуваними.",Все залежить від проекту і його складності. Він повинен бути настільки великим наскільки того потребує впевненість дева що перевірені всі основні/можливі кейси.,Внести зміни до класу. Протестувати вручну.,Не знаю.,"Для відлагодження алгоритму, уникнення можливих помилок роботи і багів, збільшення швидкості роботи, розширення можливостей в плані навантаження.","Відступи не вірні, фігурні кавички не вказані, магічні цифри, класи і методи названі не інтуєтивно, класи/методи завеликі, громізкі, купа коментарів.....","Залежить від вимог, та завдань проекту, але якщо ви довго рефакторите власний код (витрачаєте більше часу ніж на стврення) що нещодавно написали, і при цьому змін до вимог проеку не було, то ви вибрали не вірний підхід з самого початкут написання.","Map, Set, Queue, List, Iterable, Iteration, Collection","Array List, Linked List, Hash Set, Linked Hash Set","Hash Set - погруповані по хешам, швидко при великих обємає, Linked Hash Set- легко додати, Thee Set - швидкий доступ.","Hash Map, Navigable Map, Sorted Map","Для взяття елемента з мапи доводеться бігти по всім ключам, допоки не знайдеш необхідний.","Array List - для швидкого доступу, Linked List - легко/швидко додавати","Array list: get - швидко, add - не швидко remove - не швидко. Linked List get - не швидко, add - швидко, remove - швидко.",Інтерфейс колекціію. Для роботи з колекціями що працюю по типу очереді. LIFO FIFO,"Щось повязане з ітерування, ходження по певному циклу, що саме не знаю.","IO Exceptions, Run Time Exceptions....",Щоб запрограмувати поводження в залежності від обставин.,Від яких залижить логіка роботи - треба. Від яких ні - не треба.,Throw Exeption. Для відловлення роботи певної частини коду.,"Не знаю, є здогадка що це залежить від логіки опрацювання виключення.",Опрацювати певним чином. Залежить від логіки.,В цьому блоці розміщають код що виконується в любому випадку. Там і треба розміщати відповідний код.,Список обєктів перед виключенням.,"На групи роботи з байтами та чарами, на класи введенян та виведення.","Для того щоб спочатку спробувати відкрити певний ай обєкт, якщо все ок то відкрити його якщо ні повідомити про це. Закривати треба щоб зберіглася його цілісність і завершеність, дати змогу іншим працювати з ним коректно.",Для розшинення можливостей класу.,"Inner join, Left Join, Right Join, Full Join. SELECT u.Name FROM Users u JOIN Offices o ON u.Id = o.userId","SELECT name, COUNT(*) FROM Users GROUP BY (name) ",Використовується з агрегатними функціями,,Використати Сервелет та Сервелет контейнер.,From JCP we can get Servelet.,"Створення, використання, знищення.","Це архівник що містить в собі весь проект, його додаткові файли кофігурації і налаштування.",Для збереження всіх сервелетів і організації роботи з ними. Томкат,"компіляція, тестування, архівація, застосування","Існують певні розділи для внесеннф відповідної інформації збірки: compale, package, plagin, repository, dependency","Для збірки проектів, і організіції зручності збірки при колективній розробці.",Внести відповідні елементи в pom.xml,"Певне налаштування, для розширення роботи проекту.",pwd,ls,cp /pavl/1.txt /pod/2.txt,"chmod - надати прово
su - тимчасово взяти права",,,,,"Підключити спрінг бібліотеки, зробити конфігурацію бінів.",В корні проекту. ,В ньому розміщені ініціалізування бінів.,,,Play O Java O (O is object somewhere),"Це частина виконання програми, що можна відкотити назад, якщо щось буде не так як очікуються.","Автоматизовані, Явні",,Data Access Object,Менеджер для роботи з обєктами що відповідають таблицяв в БД,"Набір правил, специфікація для роботи з базами даних.",Транзакція поверне все назад. Відповідно налаштувати кетч.,"Model Controller View, для взаємодії роботи бекенда з ""мордою""","Для виконання типічних завдань, як і всі фреймворки",Для можливості використання вже створений програм через веб.,Архітектурний стиль,"Альтернатива XML, має ключ і велю, створено для зручності роботи з певними даними.",Розширення SOAP веб сервіса,"Мова для зберігання певних даних і їх структури, основні частини: елемент та атребут",,"Single Page Application, розвантажує мережу, усуває необхідність переходити зі сторінки на сторінку",Для реалізація анімаційних частин веба,"Робочий продукт краще доброї документації, Задоволення замовника краще виконання роботи в сроки, Взаємодія в команді вище ніж слідування плану. Зміни до проекту не нормально. Щось типу того)","5 +-2, оптимальне число людей з якими може нормально взаємодіяти людина","Scrum, XP","Sprint, Stand Up, Daily Stand Up, Planing, ","Визначити причину вибивання з графіка, усунути її. Ми ж команда, не зробе один не зроблять усі)",2016-02-17 17:28:27,2016-02-17 20:17:04,580379f827
6f7bc21d6b8f56716268c6b0d78871d3,Чайкин Андрей,"Соглашение по написанию кода. Название классов и интерфейсов с большой буквы, переменных, методов - с маленькой, КОНСТАНТЫ_ВОТ_ТАК, 
в начале идентификатора можно $, _, но не рекомендуется использовать знак доллара
числа в начале имени нельзя 
короткие и лаконичные имена приветствуются","не больше, чем экран монитора, еще есть рекомендация не более 10-15 строк","Файл не более 2000 строк, но ключевое это что бы класс соответствовал SRP принципу ","Затрудняет чтение и понимание кода, его поддержку. Это плохо, при необходимости внести изменения в код программист сталкивается с проблемой поиска прошлых копипастов","Числовое значение в коде. Обьявить константу с именем, которое может обьяснить значение этой переменной. И использовать ее.","Animal cat = new Cat();
cat.sleep();","Определиться с уровнем абстракции. И с самого верхнего уровня детализировать ресторан до более конкретных обьектов. К примеру, на уровне Шеф-повар -> повар -> помощник повара и тд ",Композиция. Задать себе вопрос обьект является IS-A или содержит HAS-A необходимый нам обьект,"Инкапсуляция позволяет нам скрыть внутреннюю реализацию класса. В случае нарушение инкапсуляции мы открываем доступ к нашим методам другим разработчикам, которые обязательно их используют. И когда наступит необходимость внести изменения в наш класс - мы можем случайно изменить поведение программы, что очень и очень плохо.","Каждый класс и метод должен выполнять только одну задачу. Нарушая SRP мы вводим в заблуждение других разработчиков, которые могут даже и не догадываться, что наш класс или метод решает группу взаимонесвязанных задач.
Рефакторинг, перенести код в отдельный класс или метод ","Никогда не говори с незнакомцами. Нарушая закон Деметры мы тесно связываем наш код, и в дальнейшем могут возникнуть проблемы с поддержкой кода.","Система контроля версий необходима для одновременной работы группы людей с изменяющейся информацией.
Позволяет хранить историю изменений и автора, в случае необходимости откатываться на рабочую версию кода, делать тэги рабочей версии  и тд","изменения, которые были внесены. ",нужно стараться придерживаться правила раз в 10-15 минут,"команда, которая помогает нам откатиться назад, на более раннюю, рабочую версию кода","В ignore list попадают файлы,которые  отправлять в репозиторий нам нет необходимости, к примеру, временные файлы, файлы логов, файлы настроек, откомпилированные файлы и тд","В репозиторий следует отправлять исходный код и, в случае договоренностей на проекте, файлы настроек и тд ","конфликт возникает в случае, когда два программиста мерджат в репозиторий файл, который содержит изменения в одном и том же блоке кода. Проблема решается вручную, указав  программистом какие именно изменения необходимо внести","Код, написанный для проверки отдельных модулей кода на соответствие заданным требованиям и условиям","Блок кода, блок проверки (assert методы)","Покрытие кода тестами. Не ниже, чем был на проекте до тебя и такой уровень покрытия, что бы программист был уверен, в своем коде","Когда мы тестируем public методы - мы затрагиваем также и его private методы, частично их тестируя таким образом. 
В случае, если протекстировать класс не получается - возможно у нас нарушен SRP и необходимо произвести рефакторинг кода","Stubs, Mock, Fake, Spy",Для облегчения чтения и понимания вашего кода другими программистами.,"Когда код с душком;)
Дублирование, не по конвенции названия классов, методов, переменных, слишком много комментариев, magic numbers, большие методы и тд","Главное, не переусердствовать)","Collection, List, Set, Map, Queue, Iterable
Collection - интерфейс с основными методами фреймвора, 
Iterable содержит итератор
Лист - список
Сет - множество
Мап - отображение ""ключ-значение""
Кью - очередь, поддерживающая порядок вставки элементов","ArrayList, LinkedList, Vector
HashSet, TreeSet, LinkedHashSet
HashMap, TreeMap, LinkedHashMap
PriorityQueue","Когда коллекция не должна содержать одинаковых элементов HashSet
А если еще и отcортировать нужно то TreeSet","Обычно HashMap, но если нужно отсортированную мапу - TreeMap","Обычно за константное время, если было нормальное распределение элементов по индексу в массиве, в худшем случае нужно будет еще итерироваться по списку в поисках нужного элемента","Если нужно часто будет удалять и добавлять элементы во внутрь коллекции - LinkedList, 
иначе ArrayList","В ArrayList get за постоянное время, добавление и удаление за линейное
В LinkedList get за линейное, чем больше элементов - тем дольше итерироваться по коллекции в его поиске, add/remove за постоянное, если не учитывать сам поиск элемента, естессно",Очередь поддерживает порядок вставки и удаление элементов. Есть реализации LIFO и FIFO,"Итератор позволяет нам производить операции вставки, удаления, итерации и тд внутри коллекции не вникая в ее реализацию","базовый класс Throwable, от него наследуются Error и Exception, от Exception наследуются чекед и анчекед классы","Исключительные состояние необходимо обрабатывать для предотвращения остановки программы, логгирования ","Чекед перехватываем, анчекед - перехватывать дурной тон, Error само собой мы не перехватываем","Необходимо наследоваться от класса Throwable или его наследников, создавая свои исключительные операции мы можем более детально описать исключение, которое произошло, чем в будущем поможем разработчику с ней справиться","Чекед в случае, если ошибка на стороне клиента, анчекед - если программиста","Обрабатывать в блоке try, логгировать или бросать дальше","В блоке finally необходимо закрывать ресурсы, т.к. этот блок выполнится независимо от того произошло исключение или нет","Порядок вызова методов, когда возникает ошибка stack trace возвращает цепочку методов, в обратном порядке","Есть 4 абстрактных класса
 InputStream, OutputStream для ввода/вывода байтов
 Reader, Writer для ввода/вывода посимвольно
от них наследуются все реализации BufferedReader, FileReader и тд
Также есть класс File и Path","Начиная с 7й джавы у нас появилась возможность автоматически закрывать ресурсы. Для этого необходимо, что бы класс имплементировал маркер-интерфейс Closeable или AutoCloseable","Декоратор необходим для расширения функциональности обьекта
BufferedReader(new FileReader(""...""));","Inner join, left join, right join
SELECT * 
FROM table_one
join table_two
on table_one.id=table_two.id;","группировка позволяет группировать данные в таблице по определенному значению
select *
from magazine
group by some_price",having необходим для упорядочения таблицы по функциям,"поле может хранить только одно значение
неключевое поле зависит только от ключа
неключевое поле не зависит от других неключевых полей","Создать проект
создать сервлет
web.xml
war архив","Servlet может перенаправить запрос на другой сервлет или JSP
JSP же это конечная точка, которая уже рисует страницу","в начале жизненного цикла вызывается метод init()
при обращении идет обращение к методу service()
при уничтожении обьекта метод destroy()","В корне статические страницы, папка META-INF, в ней WEB-INF, а в ней web.xml","Сервер, который сначала загружает, а потом содержит обьекты серветов
Tomcat, Jetty, WebLogic","compile
test
package
integration test
install
deploy","в корне  - pom.xml
src с джава файлами 
и папка с тестами","автоматический сборщик проекта, помогает в разработке, стандартизировать версии фреймворков и создания варников",добавить зависимость в pom.xml,расширяет возможности mavena,pwd,ls -al,"cp file.txt dir
mv file.txt newdir","chmod
7 для roota чтения, запись и исполнение
5 для группы чтения и запись
2 чтение",ls -l,команда для исполнения на уровне пользования команд уровня суперпользователя,ps ,"пайп команда для передачи вывода програмы 1 на вход другой коммандны
грейп поиск по шаблону","Создать приложение
создать application-context.xml
в этом конф файл создать бин
создать pojo class
создать обьект application contexta
запустить программу",путь прописываем в файле web.xml,"бины, связки бинов, пути к статическим ресурсам","Аннотация, для связывания бинов. Альтернатива связыванию в xml файле","Аннотация, указывающая, что класс является бином","Обычный класс, который должен содержать геттеры/сеттеры, дефолтный контструктор и поля ","Атомарная операция связи с бд, в результате которой код  выполняется полностью или не выполняется вообще",,"Сущность, хранимый обьект в бд","Паттерн, который позволяет нам абстрагироваться от бд и бизнес-логики, используется как прослойка","EntityManager это фасад для сессии. EM стандартизация с JPA,  Session обьект Hibernata",API для работы с бд,в catch блоке вызвать rollback();,"Паттерн, позволяющий нам раздеть на разные слои наше веб приложение 
Model-View-Controller",Для простоты создания приложения разными программистами,"Технология, позволяющая передачу данных между распределенными приложениями","Архитектура, которая посредством HTTP протокола передает данные (JSON)",формат передачи данных в виде javascrypt обьекта,xml файл ,язык разширяемой разметки,"язык, служащий для фонового обновления страницы не перезагружая ее полностью","Single Page Application
Одна страница для всего веб приложения",Для облегчения серверной части,,,,,,2016-02-17 17:58:14,2016-02-17 20:29:39,580379f827
43842ecc2ea04c50e76b664da8e1bb38,Троценко Владислав,"Это условные правила написания java-кода. Названия классов с большо буквы, методи с маленькой, переменный, объекты тоже с маленькой. Каждое логическое слово в названии с большой. Комментарии что касаются документации через/**/ и тд",максимум 15-18 строк,максимум 5 методов,это затратно по времени и неудобно,когда мы все константы выносим в глобальную переменную и делаем ее файнал,"public class Car{public void method()}
public class Doll{public void method()}
psvm(){Doll d = new Doll();
Car c = new Car();
c.method();
d.method();}","Есть ресторан, у него есть сотрудники как аттрибуты, сотрудники в свою очередь могут быть разных отделов и направлений. Там еще много-чего можно придумать, времени нету ",,Доступ к данным может быть небезопасным,"Важен, потому что обеспечивает безопасность",,"Чтобы распределять разработку одного приложения между многими разрааботчиками, а потом сливать все в одно готовое приложение",Коротко о последнем изменении,"Тогда, когда обновление достаточно существенно",,"Это файл для того, чтобы не коммитить файлы, которы не должны быть загружены на репозиторий",target папку из приложения созданного с помощью идеи коммитить не надо,,"Это процесс проверки качества приложения. Пишутся для того, чтобы проверить, действительно ли работает функционал ",,,,,"Для того, чтобы сделать изменения в приложении, но не нарушить его функциональности","отсутствие комментариев, нагромождение методов (аля функционалка, потому что нечитабельно), неиспользование переменных, созданных ранее(удалить в таком случае)","Столько, сколько понадобится чтобы выполнить таск, но в разумных пределах","List - для реализации list'ов(ArrayList, LinkedList), Set - сеты HashSet, LinkedHashSet, TreeSet
Queue - очереди Deque
Map - мапы","List - ArrayList, LinkedList,Vector, Stack
Set - HashSet, LinkedHashSet, TreeSet
Queue - Deque
Map - HashMap, HashTable, SortedMap",HashSet - быстрый,HashMap - удобно + позволяет использовать null в качестве ключа и несинхронизирована,"О(1), в худшем случае - О(n)","ArrayList  почти всегда, так как опишу далее","ArrayList: get() O(1) 
add(element) O(1) , O(n) worst-case 
add(int index, E element) O(n) , O(n) worst-case 
remove() O(n)
LinkedList: get(int index) O(n)
add(E element) O(1)
add(int index, E element) O(n)
remove(int index) O(n)","Это коллекция в java которая работает по принципу первый пришел - первый вышел
нужна для хранения данных и удобного доступа к ним",чтобы итерироваться по коллекции,"наверху интерфейс serializable
throwable extends serializable
его имплементируют error, exception
у exception наследники: runtimeException, SQLException, IOExc, ReflectOperatEXc",чтобы соответствующе реагировать на них,"требуется все, но обработать рантайм мы не можем",для кастомных ситуаций - иногда это полезно,,обработать,чтобы в любом случае выполнилось некоторое действие(например закрыть конекшн в jdbc) ,,"2 типа классов: InputStream 	Reader
конвертер: InputStreamReader
OutputStream 	Writer
конвертер: OutputStreamWriter
FileInputStream 	FileReader
FileOutputStream 	FileWriter
StringBufferInputStream 	StringReader","это фишка появилась в java7 и позволяет закрыть ресурсы, открытые в try. например конекшн к базе",для того чтобы не использовать полиморфизм где это неудобно(вся ИО в java построена на этом паттерне). как пример - работа банкомата который определяет какое количество каких купюр надо выдать,"inner, left, right, full
select Orders.OrderID, Customers.CustomerName, Orders.OrderDate
from Orders
inner join Customers
on Orders.CustomerID=Customers.CustomerID; ","это когда мы группируем выббранные записи по чему-то
SELECT column_name, aggregate_function(column_name)
FROM table_name
WHERE column_name operator value
GROUP BY column_name; ",having можно использовать с агрегатными функциями,,"нужен сервлет контейнер, наследовать сервлет-класс от класса HttpServlet и переопределить методы doGet(),doPost() ","Сервлет это класс, который может обрабатывать запросы пользователя. JSP - это удобное представление веб страницы (или части веб страницы) где можно писать в перемешку Java код и html, которая на сервере компилируется в сервлет","Загружается сервлет в сервлет контейнер, создается экземпляр класса-сервлета, вызывается метод инит, вызывается метод сервис(), метод дестрой() и выгрузка","включает в себя классы, хмл файлы нужны для веб-приложения","tomcat, jetty
обрабатывает сервлеты","compile
Компилирование проекта
test
Тестирование с помощью JUnit тестов
package
Создание .jar файла или war, ear в зависимости от типа проекта
integration-test
Запуск интеграционных тестов
install
Копирование .jar (war , ear) в локальный репозиторий
deploy
публикация файла в удалённый репозиторий ",,"подгружает автоматически нужные либы и плагины(их джарники), которые нужны для приложения",прописать депенденси,,pwd,ls,"cp file source
mv file path",,,права админа,,,,в папке WEB-INF,определеются бины и base-package,динамически связывает переменную класса с бином,"указывает, что класс, помечен этой аннотацией будет учитываться как компонент про компонент сканирование","plain old java object - объект класса, котороый содержит тольео поля и геттеры и сеттеры
для работы с ОRМ","минимальная логически осмысленная операция, которая имеет смысл и может быть совершена только полностью",изоллированные и неизолированные,сущность,"data access object - паттерн для того, чтобы настроить работу с бд удобней",EntityManager - в JPA,"API, который предоставляет возможность сохранять в удобном виде Java-объекты в базе данных",,"для того чтобы разделить приложение на три логические части - модель , визуальная часть и контроллерр",это намного удобней и более гибко ,"сервисы позволяющие работать веб-апликейшну и быть серверу отправлять запросы и ответы получать в виде xml, json",Representational state transfer – это стиль архитектуры программного обеспечения для распределенных систем,текстовый формат обмена данными,"Web Services Description Language — язык описания веб-сервисов и доступа к ним, основанный на языке XML",Xtensible Markup Language — расширяемый язык разметки,"технология обращения к серверу без перезагрузки страницы
для того, чтобы без рефреша данные н астранице изменялись",,"чтобы прописать скрипты, которые должны выполниться на стороне клиента",,"5-6, иногда меньше
продуктивность больше",Scrum,,нужно чтобы остальная часть команды подстраховала и помогла со сложным таском,2016-02-18 14:54:21,2016-02-18 16:11:14,c9fb844a6d
